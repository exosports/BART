[MCMC]
# Location of the output directory:
loc_dir = ./outdir/

# Tepfile name:
tep_name = /home/.../BART/inputs/tep/HD209458b.tep

# Kurucz stellar spectrum file:
kurucz   = /home/.../BART/inputs/kurucz/fp00k2odfnew.pck


# Atmospheric pressure layers: :::::::::::::::::::::::::::::::::::::::
# Pressure filename (.pres extenesion):
press_file = 100layers.pres

# Number of layers:
n_layers = 100

# Pressure at the top of the atmosphere (in bars):
p_top    = 1e-5

# Pressure at the bottom of the atmosphere (in bars):
p_bottom = 100.0

# Use log (True) or linear (False) pressure scale:
log = True


# Elemental-abundances file ::::::::::::::::::::::::::::::::::::::::::
# Basic elemental abundances file:
abun_basic = /home/.../BART/inputs/abundances_Asplund2009.txt
# FINDME: in TEA.cfg this parameter is named abun_file.

# Multiplication factor for heavy-element abundances:
solar_times = 1
    
# Swap C/O abundance ratio (True) or not (False):
COswap = False

# Elemental abundances file name (.abn extension):
abun_file = solar1x.abn 


# Temperature profile ::::::::::::::::::::::::::::::::::::::::::::::::

# Set the type of model ('iso', 'line', 'madhu_noinv', or 'madhu_inv):
PTtype = line
# Set the parameters for the initial profile:
#  Isothermal: [T]
#  Line Etal 2013:  [log10(kappa)  log10(gamma1)  log10(gamma2)  alpha  beta]
#  Madhu Etal 2009 non-inverted:  [a1 a2 p1 p3 T3]
#  Madhu Etal 2009 inverted:      [a1 a2 p1 p2 p3 T3]
PTinit = -3.0  -0.45  1.0  0.0  0.94
#PTinit =  0.993  0.20 0.05 3.0 1700   ; for madhu


# Atmospheric Elemental Abundances (pre-atmospheric) File ::::::::::::
# Pre atmospheric filename (.atm extenstion):
preatm_file = TEA_preatm.atm

# Elemental species:
in_elem  = H He C N O

# Output species:
#   - MUST use names produced by JANAF.py
#   - see TEA/conversion-record-sort.txt for the correct names
#   - MUST include all elemental species
out_spec = H_g He_ref C_g N_g O_g H2_ref CO_g CO2_g CH4_g H2O_g NH3_g C2H2_g C2H4_g

# If not None, set uniform mole mixing ratios for each out_spec, e.g.:
#   uniform = 1e-9 0.15 1e-9 1e-9 1e-9 0.85 1e-4 1e-4 1e-4 1e-4 1e-9 1e-9 1e-9
uniform = None

# Atmospheric File (P, T, species-abundances) ::::::::::::::::::::::::
# TEA output file (the 'atmospheric file') name:
atmfile = TEA_atm.tea


# MCMC arguments :::::::::::::::::::::::::::::::::::::::::::::::::::::
# The data (eclipse or transit depths):
data   = 0.00119  0.00123
# Data uncertainties:
uncert = 0.00007  0.00006

# The waveband filters:
filters   = /home/.../BART/inputs/filters/spitzer_irac1_fa.dat
            /home/.../BART/inputs/filters/spitzer_irac2_fa.dat

# List of molecules being fit:
molfit = H2O CO2 CO CH4

# Temperature boundaries:
Tmin =  400.0
Tmax = 3000.0

# The model fitting parameters:
# The 'Mi' parameters are the log10 of an abundance scale factor:
#      log(kappa)  log(g1) log(g2) alpha   beta  log(M1) log(M2) ...
params   = -2.0    0.0     1.0     0.0    0.98    0.0    -7.0 -7.0 -4.5
pmin     = -5.0   -2.0    -1.3     0.0    0.55   -9.0    -9.0 -9.0 -9.0
pmax     = -1.0    1.0     1.0     1.0    1.2     1.5     1.0  1.0  1.0
stepsize = 0.01    0.01    0.0     0.0    0.001   0.1     0.0  0.0  0.0

# Total number of MCMC samples (burn-in + final MCMC):
numit       = 1e5
# Number of parallel MCMC chains (= number of processors):
nchains     = 10
# Number of burn-in iterations per chain:
burnin      = 500
# MCMC algorithm ('demc' for Differential Evolution or 'mrw' for 
#  Metropolis Random Walk with Gaussian proposals):
walk        = demc
# Perform a least-square fit before the MCMC:
leastsq     = False
# Scale data uncertainties to enforce reduced chi-square == 1:
chisqscale  = False
# Perform the Gelman-Rubin convergence test along the MCMC:
grtest      = True
# Stot the MCMC exploration if GR is satisfyed two consecutive times:
grexit      = True
# Filename to store the model fit for each MCMC evaluation:
savemodel   = band_eclipse.npy
# Make plots:
plots       = True
# MCMC log file:
logfile     = MCMC.log

# Verbosity level (0--20):
verb = 11

# Transit variables ::::::::::::::::::::::::::::::::::::::::::::::::::
# Output transit configuration file name:
tconfig = config_transit.cfg

# Transit line information (TLI) file:
linedb = /home/.../lines/lineread_2.8-11um.tli
# Cross-section absorption files:
csfile = /home/.../BART/modules/transit/inputs/CIA_H2H2_400-7000K.dat

# Spectrum's lower wavelength boundary (alternatively, use wnhigh):
wllow   =  2.8
# Spectrum's higher wavelength boundary (alternatively, use wnlow):
wlhigh  = 11.0
# Wavelength unit conversion to cm (default: 1e-4, microns):
wlfct   = 1e-4
# Wavenumber sampling interval:
wndelt  = 1.0
# Wavenumber oversampling factor:
wnosamp = 2160
# Wavenumber unit conversion to cm-1 (default: 1.0, inverse centimeters):
wnfct = 1.0

# Eclipe or transit observing geometry:
solution = eclipse
# Maximum optical depth to calculate:
toomuch = 10.0
# Number of HWHM:
nwidth = 20

# Reference pressure and radius level (surface-ish) where p(r0) = p0:
refpress  = 0.1

# Opacity lines' strength threshold:
ethresh = 1e-6

# Opacity-grid temperature lower boundary (in Kelvin):
tlow   =  400
# Opacity-grid temperature higher boundary (in Kelvin):
thigh  = 3000
# Opacity-grid temperature sampling interval (in Kelvin):
tempdelt = 100
# Opacity-grid file name:
opacityfile = ./opacity_irac.dat

# Output spectrum file name:
outspec    = ./eclipse_out.dat
# Output file with the radius where the optical depth reached toomuch:
outtoomuch = ./eclipse_toom.dat
# Output file with the samplings info:
outsample  = ./eclipse_samp.dat

